#+TITLE: John's emacs config

* This is the config module
#+BEGIN_SRC emacs-lisp
(provide 'user-config)
#+END_SRC

* Prelude
** Configure default behavior
#+BEGIN_SRC emacs-lisp
;; colors!
(load-theme 'wombat)

;; font size
(set-face-attribute 'default nil :height 120)

;; flat modeline
(set-face-attribute 'mode-line nil :box nil)
(set-face-attribute 'mode-line-inactive nil :box nil)

;; turn off stupid bars (in order of greatest annoyance)
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)

;; modeline time
(setq display-time-default-load-average nil)
(setq display-time-format "%A %b %d %Y %H:%M")
(display-time-mode 1)
(display-battery-mode 1)

;; line numbers
(add-hook 
  'prog-mode-hook 
  (lambda ()
    (display-line-numbers-mode)
    (setq display-line-numbers 'relative)))

;; self-care
(setq inhibit-startup-screen t)
(setq inhibit-startup-echo-area-message "This aint your dad's spacemacs")
(setq initial-scratch-message ";; 頑張って!\n\n")
#+END_SRC

* Helpers n stuff
#+BEGIN_SRC emacs-lisp
(require 'helpful)
#+END_SRC

* Packages
#+BEGIN_SRC emacs-lisp
;; enable package manager
(require 'straight-init)

;; mini-modeline
(use-package mini-modeline
  :config (mini-modeline-mode 1)
  :straight (mini-modeline 
              :type git 
              :host github 
              :repo "kiennq/emacs-mini-modeline"))
	      
;; ace-window
(use-package ace-window
  :config
  (global-set-key (kbd "M-o") 'ace-window))

;; which-key
(use-package which-key
  :config (which-key-mode 1))

;; undo-tree
(use-package undo-tree
  :config (global-undo-tree-mode 1))

;; evil!
(use-package evil
  :after undo-tree
  :config (evil-mode 1))

;; evil-surround
(use-package evil-surround
  :after evil
  :config (global-evil-surround-mode 1))
  
;; w3m
(use-package emacs-w3m
  :config (require 'w3m-load)
  :straight (emacs-w3m 
              :type git 
              :host github 
              :repo "emacs-w3m/emacs-w3m"))

;; ivy
(use-package ivy
  :config (ivy-mode 1))

(use-package counsel
  :config (counsel-mode 1))
  
;; projectile
(use-package projectile)

;; magit
(use-package magit)  
#+END_SRC

* EXWM
#+BEGIN_SRC emacs-lisp
(use-package exwm
  :if (eq system-type 'gnu/linux)
  :config
  (require 'exwm-config)
  (require 'exwm-systemtray)
  (exwm-config-default)
  (exwm-systemtray-enable))
#+END_SRC
